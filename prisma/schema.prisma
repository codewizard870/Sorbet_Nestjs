// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User { 
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
  firstName           String
  lastName String
  email       String                 @unique
  password           String
  jobProfile String
    location String
  bio                String
  status Status @default(Pending)
confirmationCode String @unique
profileImage String?
  token Token?
  Post Post[]
  createdAt          DateTime               @default(now())
}

 enum Status {
  Pending      @map("pending")
  Active @map("active")
  Disabled   @map("disabled")  
  @@map("Status")
}

model SocialMedia{
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
    socialMedia String
        link String
}

model Token{
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
  token String
  createdAt  DateTime               @default(now())

//relation with user 
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId
}


model Event{
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
  event_image String
  location String
event_link String
description String
 timezone DateTime 
start_date DateTime
end_date DateTime
 
//relation with post 
  post   Post   @relation(fields: [postId], references: [id])
  postId String @unique @db.ObjectId
}

model Gig{
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
start_date  DateTime 
end_date  DateTime? 
title String
description String
gig_price_min  Int
gig_price_max  Int
location  String 
tags  String[]

//relation with post 
  post   Post   @relation(fields: [postId], references: [id])
  postId String @unique @db.ObjectId

}


model Post{
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
timestamp DateTime
text String?
content Content
gig Gig[]
event Event[]
blob Blob[]

//relation with user 
  user   User   @relation(fields: [userId], references: [id])
  userId String  @db.ObjectId
}

model Blob{
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
imageUrl String
videoUrl String

//relation with post 
  post   Post   @relation(fields: [postId], references: [id])
  postId String @unique @db.ObjectId
}

enum Content {
  Gig      @map("gig")
  Event @map("event")
  Blob   @map("blob")  
  @@map("Content")
}
